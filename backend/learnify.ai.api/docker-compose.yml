name: learnifyai
services:
  learnify_postgres:
    image: postgres:16-alpine
    container_name: learnify_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: learnifydb
      POSTGRES_USER: learnify
      POSTGRES_PASSWORD: learnifypwd
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U learnify -d learnifydb"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      learnify_bridge:
        aliases:
          - db

  pgadmin:
    image: dpage/pgadmin4:8.10
    container_name: learnify_pgadmin
    restart: unless-stopped
    depends_on:
      - learnify_postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@learnify.com
      PGADMIN_DEFAULT_PASSWORD: admin1234
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      learnify_bridge: {}

  learnify.ai.api:
    image: learnifyaiapi
    container_name: learnify_ai_api
    build:
      context: .
      dockerfile: learnify.ai.api/Dockerfile
    depends_on:
      learnify_postgres:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # Fixed port configuration - always use 8080
      - ASPNETCORE_URLS=http://0.0.0.0:8080
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=Host=learnify_postgres;Port=5432;Database=learnifydb;Username=learnify;Password=learnifypwd
    ports:
      # Fixed port mapping: always expose 8080
      - "8080:8080"
    networks:
      learnify_bridge: {}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  pgdata:
  pgadmin:

networks:
  learnify_bridge:
    driver: bridge
